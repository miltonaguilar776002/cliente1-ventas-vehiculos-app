
/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.7/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    // JAVA PLUGIN
    id 'java'
}

//================================================
//==========    PROPIEDADES  INICIO   ============
//================================================
//PROPIEDADES DEFINIDAS CON EXT FORMA 1
ext {
	nombreProyecto = "Background-Arland-Venta-Vehiculos"
	correo = "milton.aguilar.776002@gmail.com"
}
// PROPIEDADES DEFINIDAS CON EXT FORMA2
ext.telefono = "999999999"
// PROPIEDADES DEFINIDAS COMO VARIABLES 
Date dtAhora = new Date();
//================================================
//==========    PROPIEDADES  FINAL   ============
//================================================


//================================================
//======PROPIEDADES  GLOBALES  INICIO  ===========
//================================================
sourceCompatibility = "1.8"
version = "1.0.0"
archivesBaseName = 'pe.com.arland.cliente1.registro'
//================================================
//======PROPIEDADES  GLOBALES  FINAL  ============
//================================================

//================================================
//=== INICIO  PERSONALIZACION DEL JAR   ==========
//================================================
jar {
    manifest {
    attributes("Implementation-Title": nombreProyecto,
               "Implementation-Version": version,
               // CUANDO ES LLAMADO POR JAVA -JAR "NombreJar"
               "Main-Class" : "pe.com.arland.cliente1.registro.App")
    }
}
//================================================
//====FINAL  PERSONALIZACION DEL JAR    ==========
//================================================

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
    
    //Varios Repositorios
    maven {
        url "https://maven.springframework.org/release"
    }
    
}

dependencies {
    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'
    
    //LIBRERIAS IMPLEMENTADAS 
    
    // MONGO DB
    implementation 'org.mongodb:mongodb-driver-embedded:3.8.2'

	// LOG4J PARA USO DE LOGS
	implementation 'com.weicoder:log4j:3.4.5-jdk8'

}


application {
    //MAIN CLASS SOLO PARA APPLICATION CUANDO ES LLAMADO POR GRADLE -Q RUN "NombreJar"
    mainClass = 'pe.com.arland.cliente1.registro.App'
}

task compilar {
	println("===========================================================")
	println("=====    >>INICIO DE COMPILACION :"+ nombreProyecto +"/" +version + "=====")
	println("=====    COMENZADO A LAS :"+ dtAhora + "======" )
	println("=====    EN CASO DE ERROR LLAMAR A :"+ correo + "==" + telefono )
	println("===========================================================")
	println("1. ESTOY COMPILANDO")	
	println("===========================================================")
	println("=====     >>FINAL DE COMPILACION =====")
	println("===========================================================")
}


task empaquetar {
	println("===========================================================")
	println("=====     >>INICIO EMPAQUETADO  =====")
	println("===========================================================")
	println("Estoy empaquetando")
	println("===========================================================")
	println("=====     >>FINAL  EMPAQUETADO  =====")
	println("===========================================================")
}

task testear {
	println("===========================================================")
	println("=====     >>INICIO TESTING  =====")
	println("===========================================================")
	println("Estoy testeando")
	println("===========================================================")
	println("=====     >>FINAL  TESTING =====")
	println("===========================================================")
}
tasks.named('test') {
    // Use junit platform for unit tests.
    //useJUnitPlatform()
    useJUnitPlatform{
     includeTags 'Individual'
     //excludeTags 'Individual'
    }
}
